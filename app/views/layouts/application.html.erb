<!DOCTYPE html>
<html lang="pt-BR" data-theme="bumblebee">
  <head>
    <title><%= content_for(:title) || "Save Puffendale" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <link rel="manifest" href="/manifest.json">
    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">
    <%= stylesheet_link_tag "tailwind", "data-turbo-track": "reload" %>
    <%# <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@5" rel="stylesheet" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/daisyui@5/themes.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <%= javascript_importmap_tags %>
  </head>

  <body class="bg-base-200 min-h-screen">

    <% if logged_in? %>
      <%= render "layouts/header_logged_in" %>
    <% else %>
      <%= render "layouts/header_logged_out" %>
    <% end %>

    <div class="toast-container fixed top-4 right-4 flex flex-col gap-2 z-50" id="flash-toasts">
      <% if flash[:notice] %>
        <div class="toast transition-all duration-500">
          <div class="alert alert-success shadow-lg" role="status" aria-live="polite">
            <span><%= flash[:notice] %></span>
          </div>
        </div>
      <% end %>

      <% if flash[:alert] %>
        <div class="toast transition-all duration-500">
          <div class="alert alert-error shadow-lg" role="status" aria-live="polite">
            <span><%= flash[:alert] %></span>
          </div>
        </div>
      <% end %>
    </div>

    <%= yield %>

    <%= render "layouts/footer" %>

    <script>
      (function () {
        function bootToasts() {
          const container = document.getElementById('flash-toasts');
          if (!container) return;

          const toasts = container.querySelectorAll('.toast');
          toasts.forEach((toast, i) => {
            const visibleMs = 3000 + i * 150;

            setTimeout(() => {
              toast.classList.add('opacity-0', 'translate-y-2');
            }, visibleMs);

            setTimeout(() => {
              toast.remove();
              if (!container.querySelector('.toast')) container.remove();
            }, visibleMs + 550);
          });
        }

        window.addEventListener('turbo:load', bootToasts);
        document.addEventListener('DOMContentLoaded', bootToasts);
      })();
    </script>

  </body>
</html>
